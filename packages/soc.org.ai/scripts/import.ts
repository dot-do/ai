#!/usr/bin/env tsx
import fs from 'fs'
import path from 'path'
import { fileURLToPath } from 'url'

const __filename = fileURLToPath(import.meta.url)
const __dirname = path.dirname(__filename)

/**
 * Import script to fetch O*NET/SOC data and generate TypeScript files
 *
 * This script should:
 * 1. Use the existing O*NET parsers from workers/admin/src/seed/parsers/onet.ts
 * 2. Parse occupation data, abilities, skills, knowledge, etc.
 * 3. Generate TypeScript data files with tree-shakeable exports
 */

interface OccupationData {
  onetCode: string
  title: string
  description?: string
}

async function importFromSeed() {
  console.log('Importing O*NET/SOC data from seed...')

  // For now, create placeholder data
  const occupations: Record<string, OccupationData> = {
    '11-1011.00': {
      onetCode: '11-1011.00',
      title: 'Chief Executives',
      description:
        'Determine and formulate policies and provide overall direction of companies or private and public sector organizations within guidelines set up by a board of directors or similar governing body.',
    },
    '15-1252.00': {
      onetCode: '15-1252.00',
      title: 'Software Developers',
      description: 'Research, design, and develop computer and network software or specialized utility programs.',
    },
    '29-1141.00': {
      onetCode: '29-1141.00',
      title: 'Registered Nurses',
      description: 'Assess patient health problems and needs, develop and implement nursing care plans, and maintain medical records.',
    },
  }

  // Generate occupations file
  const occupationsContent = `import type { Occupation } from '../types/occupation.js'

/**
 * O*NET Occupations data
 * Auto-generated by scripts/import.ts
 */
export const occupations: Record<string, Occupation> = ${JSON.stringify(occupations, null, 2)}

// Tree-shakeable getters
export function getOccupation(onetCode: string): Occupation | undefined {
  return occupations[onetCode]
}

export function getAllOccupations(): Occupation[] {
  return Object.values(occupations)
}

export function getOccupationsByTitle(title: string): Occupation[] {
  const searchTerm = title.toLowerCase()
  return Object.values(occupations).filter(occ =>
    occ.title.toLowerCase().includes(searchTerm)
  )
}

export function getOccupationsByJobZone(jobZone: number): Occupation[] {
  return Object.values(occupations).filter(occ => occ.jobZone === jobZone)
}

export function getOccupationsByCodePrefix(prefix: string): Occupation[] {
  return Object.values(occupations).filter(occ =>
    occ.onetCode.startsWith(prefix)
  )
}
`

  // Write file
  const dataDir = path.resolve(__dirname, '../src/data')
  fs.mkdirSync(dataDir, { recursive: true })

  fs.writeFileSync(path.join(dataDir, 'occupations.ts'), occupationsContent)

  console.log('âœ“ Generated occupations.ts')
  console.log(`\nImported ${Object.keys(occupations).length} occupations`)
  console.log('\nNote: This is placeholder data. To import full O*NET data:')
  console.log('1. Download O*NET database from https://www.onetcenter.org/database.html')
  console.log('2. Use the parsers in workers/admin/src/seed/parsers/onet.ts')
  console.log('3. Update this script to generate data from parsed O*NET files')
}

// Run the import
importFromSeed().catch(console.error)
