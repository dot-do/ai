name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
        
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10.11.0
      
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
          
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install
        
      - name: Build
        run: pnpm build
        
      # Bundle analysis steps
      - name: Restore next build
        uses: actions/cache@v4
        id: restore-build-cache
        env:
          cache-name: cache-next-build
        with:
          path: .next/cache
          # If you use a different build directory, change this path
          key: ${{ runner.os }}-build-${{ env.cache-name }}

      - name: Analyze bundle
        working-directory: platform
        run: npx -p nextjs-bundle-analysis report

      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: platform/.next/analyze/__bundle_analysis.json

      - name: Download base branch bundle stats
        uses: dawidd6/action-download-artifact@v6
        if: success() && github.event.number
        continue-on-error: true
        with:
          workflow: build.yml
          branch: ${{ github.event.pull_request.base.ref }}
          path: platform/.next/analyze/base/bundle
          if_no_artifact_found: warn
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if base branch bundle exists
        id: check-base-bundle
        if: success() && github.event.number
        run: |
          if [ -d "platform/.next/analyze/base/bundle" ] && [ "$(ls -A platform/.next/analyze/base/bundle 2>/dev/null)" ]; then
            echo "base_bundle_exists=true" >> $GITHUB_OUTPUT
          else
            echo "base_bundle_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Compare with base branch bundle
        if: success() && github.event.number && steps.check-base-bundle.outputs.base_bundle_exists == 'true'
        run: |
          if [ -f "platform/.next/analyze/base/bundle/bundle/__bundle_analysis.json" ]; then
            # Fix path to match where the file is actually downloaded
            mkdir -p platform/.next/analyze/base/bundle
            cp platform/.next/analyze/base/bundle/bundle/__bundle_analysis.json platform/.next/analyze/base/bundle/
            cd platform && npx -p nextjs-bundle-analysis compare
          else
            echo "No base bundle analysis file found. Skipping comparison."
            # Debug - list all files in base bundle directory
            echo "Debug: Listing base bundle directory contents"
            find platform/.next/analyze/base -type f | sort || echo "Base directory not found or empty"
          fi

      - name: Check Comment File
        id: check-comment
        if: success() && github.event.number
        run: |
          if [ -f platform/.next/analyze/__bundle_analysis_comment.txt ]; then
            echo "comment file exists"
            cat platform/.next/analyze/__bundle_analysis_comment.txt
            echo "comment_exists=true" >> $GITHUB_OUTPUT
          else
            echo "comment file does not exist"
            echo "comment_exists=false" >> $GITHUB_OUTPUT
            # Enhanced debugging - list all files in analyze directory structure
            echo "Debug: Listing analyze directory contents"
            ls -la platform/.next/analyze/ || echo "Analyze directory not found"
            echo "Debug: Checking if analyze directory exists"
            if [ -d "platform/.next/analyze" ]; then
              find platform/.next/analyze -type f | sort
            else
              echo "The .next/analyze directory does not exist"
            fi
          fi

      - name: Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: success() && github.event.number && steps.check-comment.outputs.comment_exists == 'true'
        with:
          header: next-bundle-analysis
          path: platform/.next/analyze/__bundle_analysis_comment.txt
          recreate: true
